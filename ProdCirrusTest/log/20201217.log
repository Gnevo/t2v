11:01:50 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = gine001 AND company_id = 6
11:01:51 gine001 Gilad Nevo INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( gine001, 185.176.246.87, Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 ) => {inserted_id = 15327}
11:01:51 gine001 Gilad Nevo DELETE data from tables `temp_session` on conditions username LIKE gine001
11:01:51 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 11:01:51) on conditions username = gine001
11:01:51 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 11:01:51) on conditions username = gine001 AND company_id = 6
11:14:31 gine001 Gilad Nevo DELETE data from tables `temp_session` on conditions username LIKE gine001
11:14:31 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (0, 2020-12-17 11:14:31) on conditions username = gine001
11:14:31 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 11:14:31) on conditions username = gine001 AND company_id = 6
11:14:31   UPDATING data to tables `log_login` fields ( logout_time ) values (2020-12-17:10:14:31) on conditions id = 15327 AND username = gine001
11:14:40 gine001 Gilad Nevo INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( gine001, 185.176.246.87, Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 ) => {inserted_id = 15328}
11:14:40 gine001 Gilad Nevo DELETE data from tables `temp_session` on conditions username LIKE gine001
11:14:40 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 11:14:40) on conditions username = gine001
11:14:40 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 11:14:40) on conditions username = gine001 AND company_id = 6
11:14:41 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`ws_sessions` fields ( user_id ) values (gine001) on conditions session_id = 0e08fqh5e7cu3jq7gnnmq19bl2
11:48:08 gine001 Gilad Nevo INSERTING data into tables `time2vie_cirruscommon`.`login` fields ( username, mobile, role, login, date, company_ids, social_security ) values ( soek002, , 4, 0, 2020-12-17, 6,, 6209089223 ) => {inserted_id = 0}
11:48:08 gine001 Gilad Nevo INSERTING data into tables `time2vie_cirruscommon`.`secondary_login` fields ( username, company_id, last_login_time, last_pw_update_date, error, password ) values ( soek002, 6, 0000-00-00 00:00:00, 2020-12-17, 0, e23ed3da13abc3b3da2b711d207c7208 ) => {inserted_id = 9858}
11:48:08 gine001 Gilad Nevo INSERTING data into tables `customer` fields ( username, century, code, social_security, first_name, last_name, address, city, post, phone, mobile, email, date, status, date_inactive, fkkn, gender, employee_contract_start_month, employee_contract_period_date, employee_contract_period_length, kn_name, kn_address, kn_postno, kn_reference_no, kn_box, kn_city ) values ( soek002, 19, 1-1-10207, 6209089223, Solveig, Ek, By stora baden,  VÄNNÄS, , , , , 2020-12-17, 1, , 1, 2, , , , , , , , ,  ) => {inserted_id = 0}
11:50:04 gine001 Gilad Nevo INSERTING data into tables `time2vie_cirruscommon`.`login` fields ( username, mobile, social_security, role, login, date, company_ids ) values ( kehj001, , 8301315423, 3, 0, 2020-12-17, 6, ) => {inserted_id = 0}
11:50:04 gine001 Gilad Nevo INSERTING data into tables `time2vie_cirruscommon`.`secondary_login` fields ( username, company_id, last_login_time, last_pw_update_date, error, password ) values ( kehj001, 6, 0000-00-00 00:00:00, 2020-12-17, 0, e23ed3da13abc3b3da2b711d207c7208 ) => {inserted_id = 9859}
11:50:04 gine001 Gilad Nevo INSERTING data into tables `employee` fields ( username, century, code, social_security, first_name, last_name, gender, address, city, post, phone, mobile, email, date, color, status, date_inactive, max_hours, monthly_salary, start_day, remaining_sem_leave, sem_leave_todate, leave_in_advance, care_of, office_personal, substitute, salary_type, sem_leave_days, vab_leave_days, fp_leave_days, nopay_leave_days, other_leave_days, ice, employee_contract_start_month, employee_contract_period_date, employee_contract_period_length, candg_follow, inconvenient_on ) values ( kehj001, 19, 1-10203, 8301315423, Kersti, Hjelm, 2, , , vännes, , , , 2020-12-17, #b80636, 1, , , 0, 10.00, , , , , , , 1, , , , , , , , , , , 1 ) => {inserted_id = 0}
11:50:04 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( company_ids=CONCAT(`company_ids`,?) ) values (6,) on conditions social_security = 8301315423 AND company_ids NOT LIKE %6,%
11:50:22 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( role, mobile ) values (3, ) on conditions username = kehj001
11:50:22 gine001 Gilad Nevo UPDATING data to tables `employee` fields ( code, century, social_security, first_name, last_name, gender, address, city, post, phone, mobile, email, date, color, status, date_inactive, max_hours, monthly_salary, start_day, remaining_sem_leave, sem_leave_todate, leave_in_advance, care_of, office_personal, substitute, salary_type, sem_leave_days, vab_leave_days, fp_leave_days, nopay_leave_days, other_leave_days, ice, employee_contract_start_month, employee_contract_period_date, employee_contract_period_length, candg_follow, inconvenient_on ) values (1-10203, 19, 8301315423, Kersti, Hjelm, 2, , , vännes, , , , 2020-12-17, #b80636, 1, , , 0, 10.00, 0, , 0, , 0, 0, 1, 0, 0, 0, 0, 0, , , , , 0, 1) on conditions username = kehj001
11:50:22 gine001 Gilad Nevo INSERTING data into tables `emp_inconvinient_time` fields ( emp_username, on_call, on_call_holiday, on_call_bigholiday, inconvinient_night, inconvinient_evening, inconvinient_holiday, inconvinient_week_holiday, date_from, added_by ) values ( kehj001, , , , , , , , 2020-12-17, gine001 ) => {inserted_id = 57}
11:50:22 gine001 Gilad Nevo INSERTING data into tables `emp_salary` fields ( emp_username, salary_per_month, salary_per_hour, date_from, added_by ) values ( kehj001, , , 2020-12-17, gine001 ) => {inserted_id = 59}
11:50:22 gine001 Gilad Nevo DELETE data from tables `team` on conditions employee = kehj001
11:50:22 gine001 Gilad Nevo INSERTING data into tables `team` fields ( customer, employee, role ) values ( anst007, kehj001, 3 ) => {inserted_id = 0}
11:55:23 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = gine001 AND company_id = 6
11:55:23 gine001 Gilad Nevo INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( gine001, 185.176.246.87, okhttp/3.9.1 ) => {inserted_id = 15329}
11:55:23 gine001 Gilad Nevo DELETE data from tables `temp_session` on conditions username LIKE gine001
11:55:23 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 11:55:23) on conditions username = gine001
11:55:23 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 11:55:23) on conditions username = gine001 AND company_id = 6
11:55:41 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = gine001 AND company_id = 6
11:55:41 gine001 Gilad Nevo INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( gine001, 185.176.246.87, okhttp/3.9.1 ) => {inserted_id = 15330}
11:55:41 gine001 Gilad Nevo DELETE data from tables `temp_session` on conditions username LIKE gine001
11:55:41 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 11:55:41) on conditions username = gine001
11:55:41 gine001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 11:55:41) on conditions username = gine001 AND company_id = 6
11:57:07 gine001 Gilad Nevo INSERTING data into tables `time2vie_cirruscommon`.`support_ticket_answers` fields ( ticket_id, submited_user, answer, category_id, priority, ticket_type, status, hidden ) values ( 2736, gine001, Lägger det till programmeraren, 12, 2, 1, 3, 0 ) => {inserted_id = 7289}
11:57:52 gine001 Gilad Nevo INSERTING data into tables `time2vie_cirruscommon`.`support_ticket_answers` fields ( ticket_id, submited_user, answer, category_id, priority, ticket_type, status, hidden ) values ( 2736, gine001, <p>mandatory documents can not be signed via the app. (so far iPhone latest updated version)</p><p><br></p><p>disconnected from the function in connection with first signing.</p>, 12, 2, 1, 3, 1 ) => {inserted_id = 7290}
12:15:12 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = dodo001 AND company_id = 6
12:15:12 dodo001 Admin Cirrus INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( dodo001, 223.233.123.73, Time2View/2 CFNetwork/1206 Darwin/20.1.0 ) => {inserted_id = 15331}
12:15:12 dodo001 Admin Cirrus DELETE data from tables `temp_session` on conditions username LIKE dodo001
12:15:12 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 12:15:12) on conditions username = dodo001
12:15:12 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 12:15:12) on conditions username = dodo001 AND company_id = 6
12:15:42 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = dodo001 AND company_id = 6
12:15:42 dodo001 Admin Cirrus INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( dodo001, 223.233.123.73, Time2View/2 CFNetwork/1206 Darwin/20.1.0 ) => {inserted_id = 15332}
12:15:42 dodo001 Admin Cirrus DELETE data from tables `temp_session` on conditions username LIKE dodo001
12:15:42 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 12:15:42) on conditions username = dodo001
12:15:42 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 12:15:42) on conditions username = dodo001 AND company_id = 6
12:15:50 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = dodo001 AND company_id = 6
12:15:50 dodo001 Admin Cirrus INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( dodo001, 223.233.123.73, Time2View/2 CFNetwork/1206 Darwin/20.1.0 ) => {inserted_id = 15333}
12:15:50 dodo001 Admin Cirrus DELETE data from tables `temp_session` on conditions username LIKE dodo001
12:15:50 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 12:15:50) on conditions username = dodo001
12:15:50 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 12:15:50) on conditions username = dodo001 AND company_id = 6
12:16:02 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = dodo001 AND company_id = 6
12:16:02 dodo001 Admin Cirrus INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( dodo001, 223.233.123.73, Time2View/2 CFNetwork/1206 Darwin/20.1.0 ) => {inserted_id = 15334}
12:16:02 dodo001 Admin Cirrus DELETE data from tables `temp_session` on conditions username LIKE dodo001
12:16:02 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 12:16:02) on conditions username = dodo001
12:16:02 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 12:16:02) on conditions username = dodo001 AND company_id = 6
12:16:34 gine001 Gilad Nevo INSERTING data into tables `document_sign` fields ( username, date_from, date_to, sign, ocs ) values ( gine001, 2020-11-13 13:27:08, 2020-12-17 11:16:34, 1, 1 ) => {inserted_id = 5} #Mobile-App: Log-id=15330
12:16:34 gine001 Gilad Nevo INSERTING data into tables `document_sign_details` fields ( id, sign, ocs ) values ( 5, , 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 ) => {inserted_id = 0} #Mobile-App: Log-id=15330
12:20:27 gine001 Gilad Nevo DELETE data from tables `report_signing` on conditions employee = gine001 AND customer = anst007 AND date = 2020-11-01 #Mobile-App: Log-id=15330
12:20:27 gine001 Gilad Nevo INSERTING data into tables `report_signing_delete` fields ( employee, customer, report_date, deleted_by ) values ( gine001, anst007, 2020-11-01, gine001 ) => {inserted_id = 0} #Mobile-App: Log-id=15330
12:20:46 gine001 Gilad Nevo INSERTING data into tables `report_signing` fields ( employee, customer, date, signin_employee, signin_date, employee_sign, employee_ocs, signin_tl, signin_tl_date, tl_sign, tl_ocs, signin_sutl, signin_sutl_date, sutl_sign, sutl_ocs, xml ) values ( gine001, anst007, 2020-11-1, gine001, 2020-12-17 12:20:46, , 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, gine001, 2020-12-17 12:20:46, , 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, gine001, 2020-12-17 12:20:46, , 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, <?xml version="1.0" encoding="UTF-8"?>
            <ns:Tidredovisning xmlns:ns="http://schema.forsakringskassan.se/integration/isassistansersattning/tidredovisning/1">
                    <ns:id>6a7b2d00-0070-2020-0011-8229de001001</ns:id>
                    <ns:redovisningsmanad>2020-11</ns:redovisningsmanad>
                    <ns:personSomHarAssistans>
                      <ns:personnummer>194609110046</ns:personnummer>
                      <ns:fornamn>Anne</ns:fornamn>
                      <ns:efternamn>Stål</ns:efternamn>
                    </ns:personSomHarAssistans>
                    <ns:assistent>
                        <ns:personnummer>195807012058</ns:personnummer>
                        <ns:fornamn>Gilad</ns:fornamn>
                        <ns:efternamn>Nevo</ns:efternamn>
                        <ns:kollektivavtal>false</ns:kollektivavtal>
                    </ns:assistent>
                    <ns:berakningsperiod>
                        <ns:fromDag>2020-11-01</ns:fromDag>
                        <ns:tomDag>2020-11-30</ns:tomDag>
                    </ns:berakningsperiod><ns:anstalldAvPersonSomHarAssistans>true</ns:anstalldAvPersonSomHarAssistans><ns:tidrapport>
                        <ns:rapportRad>
                                                    <ns:dag>15</ns:dag>
                                                    <ns:fromTid>12.00</ns:fromTid>
                                                    <ns:tomTid>13.56</ns:tomTid><ns:aktivTid>true</ns:aktivTid>
                                                </ns:rapportRad>
                    </ns:tidrapport><ns:telefonnummerAnordnare>070-44349334</ns:telefonnummerAnordnare><ns:telefonnummerAssistent>19332112</ns:telefonnummerAssistent></ns:Tidredovisning> ) => {inserted_id = 333} #Mobile-App: Log-id=15330
12:20:46 gine001 Gilad Nevo INSERTING data into tables `report_signing_details` fields ( signing_id, employee_sign, employee_ocs, tl_sign, tl_ocs, sutl_sign, sutl_ocs ) values ( 333, , MIIHrAoBAKCCB6UwggehBgkrBgEFBQcwAQEEggeSMIIHjjCCATehgY8wgYwxCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMT4wPAYDVQQDDDVIYW5kZWxzYmFua2VuIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEIE9DU1AgU2lnbmluZxgPMjAyMDEyMTcxMTIwNDZaMFwwWjBBMAkGBSsOAwIaBQAEFFVE5C58uLPfICg573gLrEDjzXckBBQc9eiGDvlOVOtCX+oMbwNoZFX+iAIIRv5lMvIjuzeAABgPMjAyMDEyMTcxMTIwNDZaoQIwAKE0MDIwMAYJKwYBBQUHMAECAQH/BCCCL+sPo+jk48jNBRj/jGsroBA8c5ab10J53lo2REoijzANBgkqhkiG9w0BAQUFAAOCAQEAbcdZ2O/ec/G1qxSv1IZ1jmjWQGRo6s0cbp1LRgLM3vzzbz8Tg1EDEoIpFuiXnkJ6R9gd0oXuH3whvQcvbjYFgNAiC9BpXww9KwmTTe0lxmu0xz6RYzYA9j/rgGj6tRpFPT/G0moou6N9/J491dfsaLGyLcpE1LAtEl/AUkp8RlVm3vAn4BxwgSCLlTwpAePo81mZ+xaNSM1iT55eHMS5FKNER3MortFR2aki/2GQRDVeezqN2jxFsMsixGo1A1rL8Ezbx5FQgXD3LJtdoWgOElZpEA66Cuq2ZDG2+22V0TzXr5wA/HnyhDT9H+Pl3ZlbWf3lq0khR+7nBqfvEXq2eqCCBTswggU3MIIFMzCCAxugAwIBAgIINp3uz62f3v0wDQYJKoZIhvcNAQELBQAwgZExCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMUMwQQYDVQQDDDpTdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEMB4XDTIwMTEwODIzMDAwMFoXDTIxMDUwOTIxNTk1OVowgYwxCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMT4wPAYDVQQDDDVIYW5kZWxzYmFua2VuIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEIE9DU1AgU2lnbmluZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK+MVRRfypDstDqpMnTn1o82sxZgNqwUyoOc1PsuuqJcuMw7yAVxzAbP7+qso1ypzqBeqcWfeh0anEYZHqEETUrB2citp6QjhssufvHMPi6Lasq/+OCsuLC3M3ISzBdpdLUpVNesu5WAO7n0GidWDqVL47lXB3NnCX9YjXv8wjcZLMlbyHq2fj09iyaX5cgsb7IDsri/I0mqkoWpDe5wwOk7ekaMf9n+80/i4khl+Bp5rRGTWxyb4z3efsm7oOpVt0/wONORozg28ALXe9P32Iiw7fL4bkXoM+GKskkoP20kCXF1ltTYV+Yc7z0nmml+0H1nyNxp/cxqmjKCl0wKJdMCAwEAAaOBkTCBjjATBgNVHSAEDDAKMAgGBiqFcE4BATAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCTAOBgNVHQ8BAf8EBAMCBkAwDwYJKwYBBQUHMAEFBAIFADAfBgNVHSMEGDAWgBQc9eiGDvlOVOtCX+oMbwNoZFX+iDAdBgNVHQ4EFgQU7HvPEwQRqsv6oq6kZ2KxSxpkTa8wDQYJKoZIhvcNAQELBQADggIBAGWoplcjkhtGO7OXB6RS5memO/9D2HuGzZ2FQQq8DzbaW/9JQ2YVA9fYeyREVvuZytstXXG1mT412io/rxAGeD3DCmz+15w3Gax07RAckgBag1ACVPkK6T1d1hOcQ/BOtoSY8oon4i5koXWgjnx9eyrK3m/WRImgrEPR2S7Kxy98pTrsqh2ckwpDQflR/jMdJu1NAgfnFGPW4aDpEAcUf8/SYc2cOlzsKc3ZaOFqxb72hDNsOwKKYi9eKrSzX1yvr/0TW+bZd4PRiv235XbZMJbHI1YqIPpefneeC5FbpZm1RxqUSu+OXjYECwE/ZAIepgEZlrCQAXauKHAD/9nCS5/37AAPHWaV6VR9662QLhAOdUVcfykj8ue6gnUlHwoRtnojZQU4xgk8DGym+cK9ZsfUCrrQ27ivEHWjiMFIQLXmFpwYMHh8gO2yVaWcrImbPGtQa0Jqq/6WBny++2erz8Wqysc/NHoyFqcLBGtdPg1FCNKndA7qYJ7dJBssYvVxsfJxHuAYbqlZGjS2Avwzk3PN6L5Fxv+jYlNjxn2foOW6/2M0+OpO/RkeC8ud4Cg9zxClHYH7Jqctxa9Ov2aR5vp0ioqB/or0PHJ2ryFmgQPDOoikEU5SYdIVqLe3alZQtPEWVMppBA8NuX7vO+0f0+TX8GCbD/4lWbjd2hRriZjc, , MIIHrAoBAKCCB6UwggehBgkrBgEFBQcwAQEEggeSMIIHjjCCATehgY8wgYwxCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMT4wPAYDVQQDDDVIYW5kZWxzYmFua2VuIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEIE9DU1AgU2lnbmluZxgPMjAyMDEyMTcxMTIwNDZaMFwwWjBBMAkGBSsOAwIaBQAEFFVE5C58uLPfICg573gLrEDjzXckBBQc9eiGDvlOVOtCX+oMbwNoZFX+iAIIRv5lMvIjuzeAABgPMjAyMDEyMTcxMTIwNDZaoQIwAKE0MDIwMAYJKwYBBQUHMAECAQH/BCCCL+sPo+jk48jNBRj/jGsroBA8c5ab10J53lo2REoijzANBgkqhkiG9w0BAQUFAAOCAQEAbcdZ2O/ec/G1qxSv1IZ1jmjWQGRo6s0cbp1LRgLM3vzzbz8Tg1EDEoIpFuiXnkJ6R9gd0oXuH3whvQcvbjYFgNAiC9BpXww9KwmTTe0lxmu0xz6RYzYA9j/rgGj6tRpFPT/G0moou6N9/J491dfsaLGyLcpE1LAtEl/AUkp8RlVm3vAn4BxwgSCLlTwpAePo81mZ+xaNSM1iT55eHMS5FKNER3MortFR2aki/2GQRDVeezqN2jxFsMsixGo1A1rL8Ezbx5FQgXD3LJtdoWgOElZpEA66Cuq2ZDG2+22V0TzXr5wA/HnyhDT9H+Pl3ZlbWf3lq0khR+7nBqfvEXq2eqCCBTswggU3MIIFMzCCAxugAwIBAgIINp3uz62f3v0wDQYJKoZIhvcNAQELBQAwgZExCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMUMwQQYDVQQDDDpTdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEMB4XDTIwMTEwODIzMDAwMFoXDTIxMDUwOTIxNTk1OVowgYwxCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMT4wPAYDVQQDDDVIYW5kZWxzYmFua2VuIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEIE9DU1AgU2lnbmluZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK+MVRRfypDstDqpMnTn1o82sxZgNqwUyoOc1PsuuqJcuMw7yAVxzAbP7+qso1ypzqBeqcWfeh0anEYZHqEETUrB2citp6QjhssufvHMPi6Lasq/+OCsuLC3M3ISzBdpdLUpVNesu5WAO7n0GidWDqVL47lXB3NnCX9YjXv8wjcZLMlbyHq2fj09iyaX5cgsb7IDsri/I0mqkoWpDe5wwOk7ekaMf9n+80/i4khl+Bp5rRGTWxyb4z3efsm7oOpVt0/wONORozg28ALXe9P32Iiw7fL4bkXoM+GKskkoP20kCXF1ltTYV+Yc7z0nmml+0H1nyNxp/cxqmjKCl0wKJdMCAwEAAaOBkTCBjjATBgNVHSAEDDAKMAgGBiqFcE4BATAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCTAOBgNVHQ8BAf8EBAMCBkAwDwYJKwYBBQUHMAEFBAIFADAfBgNVHSMEGDAWgBQc9eiGDvlOVOtCX+oMbwNoZFX+iDAdBgNVHQ4EFgQU7HvPEwQRqsv6oq6kZ2KxSxpkTa8wDQYJKoZIhvcNAQELBQADggIBAGWoplcjkhtGO7OXB6RS5memO/9D2HuGzZ2FQQq8DzbaW/9JQ2YVA9fYeyREVvuZytstXXG1mT412io/rxAGeD3DCmz+15w3Gax07RAckgBag1ACVPkK6T1d1hOcQ/BOtoSY8oon4i5koXWgjnx9eyrK3m/WRImgrEPR2S7Kxy98pTrsqh2ckwpDQflR/jMdJu1NAgfnFGPW4aDpEAcUf8/SYc2cOlzsKc3ZaOFqxb72hDNsOwKKYi9eKrSzX1yvr/0TW+bZd4PRiv235XbZMJbHI1YqIPpefneeC5FbpZm1RxqUSu+OXjYECwE/ZAIepgEZlrCQAXauKHAD/9nCS5/37AAPHWaV6VR9662QLhAOdUVcfykj8ue6gnUlHwoRtnojZQU4xgk8DGym+cK9ZsfUCrrQ27ivEHWjiMFIQLXmFpwYMHh8gO2yVaWcrImbPGtQa0Jqq/6WBny++2erz8Wqysc/NHoyFqcLBGtdPg1FCNKndA7qYJ7dJBssYvVxsfJxHuAYbqlZGjS2Avwzk3PN6L5Fxv+jYlNjxn2foOW6/2M0+OpO/RkeC8ud4Cg9zxClHYH7Jqctxa9Ov2aR5vp0ioqB/or0PHJ2ryFmgQPDOoikEU5SYdIVqLe3alZQtPEWVMppBA8NuX7vO+0f0+TX8GCbD/4lWbjd2hRriZjc, , MIIHrAoBAKCCB6UwggehBgkrBgEFBQcwAQEEggeSMIIHjjCCATehgY8wgYwxCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMT4wPAYDVQQDDDVIYW5kZWxzYmFua2VuIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEIE9DU1AgU2lnbmluZxgPMjAyMDEyMTcxMTIwNDZaMFwwWjBBMAkGBSsOAwIaBQAEFFVE5C58uLPfICg573gLrEDjzXckBBQc9eiGDvlOVOtCX+oMbwNoZFX+iAIIRv5lMvIjuzeAABgPMjAyMDEyMTcxMTIwNDZaoQIwAKE0MDIwMAYJKwYBBQUHMAECAQH/BCCCL+sPo+jk48jNBRj/jGsroBA8c5ab10J53lo2REoijzANBgkqhkiG9w0BAQUFAAOCAQEAbcdZ2O/ec/G1qxSv1IZ1jmjWQGRo6s0cbp1LRgLM3vzzbz8Tg1EDEoIpFuiXnkJ6R9gd0oXuH3whvQcvbjYFgNAiC9BpXww9KwmTTe0lxmu0xz6RYzYA9j/rgGj6tRpFPT/G0moou6N9/J491dfsaLGyLcpE1LAtEl/AUkp8RlVm3vAn4BxwgSCLlTwpAePo81mZ+xaNSM1iT55eHMS5FKNER3MortFR2aki/2GQRDVeezqN2jxFsMsixGo1A1rL8Ezbx5FQgXD3LJtdoWgOElZpEA66Cuq2ZDG2+22V0TzXr5wA/HnyhDT9H+Pl3ZlbWf3lq0khR+7nBqfvEXq2eqCCBTswggU3MIIFMzCCAxugAwIBAgIINp3uz62f3v0wDQYJKoZIhvcNAQELBQAwgZExCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMUMwQQYDVQQDDDpTdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEMB4XDTIwMTEwODIzMDAwMFoXDTIxMDUwOTIxNTk1OVowgYwxCzAJBgNVBAYTAlNFMSgwJgYDVQQKDB9TdmVuc2thIEhhbmRlbHNiYW5rZW4gQUIgKHB1YmwpMRMwEQYDVQQFEwo1MDIwMDc3ODYyMT4wPAYDVQQDDDVIYW5kZWxzYmFua2VuIEN1c3RvbWVyIENBMyB2MSBmb3IgQmFua0lEIE9DU1AgU2lnbmluZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK+MVRRfypDstDqpMnTn1o82sxZgNqwUyoOc1PsuuqJcuMw7yAVxzAbP7+qso1ypzqBeqcWfeh0anEYZHqEETUrB2citp6QjhssufvHMPi6Lasq/+OCsuLC3M3ISzBdpdLUpVNesu5WAO7n0GidWDqVL47lXB3NnCX9YjXv8wjcZLMlbyHq2fj09iyaX5cgsb7IDsri/I0mqkoWpDe5wwOk7ekaMf9n+80/i4khl+Bp5rRGTWxyb4z3efsm7oOpVt0/wONORozg28ALXe9P32Iiw7fL4bkXoM+GKskkoP20kCXF1ltTYV+Yc7z0nmml+0H1nyNxp/cxqmjKCl0wKJdMCAwEAAaOBkTCBjjATBgNVHSAEDDAKMAgGBiqFcE4BATAWBgNVHSUBAf8EDDAKBggrBgEFBQcDCTAOBgNVHQ8BAf8EBAMCBkAwDwYJKwYBBQUHMAEFBAIFADAfBgNVHSMEGDAWgBQc9eiGDvlOVOtCX+oMbwNoZFX+iDAdBgNVHQ4EFgQU7HvPEwQRqsv6oq6kZ2KxSxpkTa8wDQYJKoZIhvcNAQELBQADggIBAGWoplcjkhtGO7OXB6RS5memO/9D2HuGzZ2FQQq8DzbaW/9JQ2YVA9fYeyREVvuZytstXXG1mT412io/rxAGeD3DCmz+15w3Gax07RAckgBag1ACVPkK6T1d1hOcQ/BOtoSY8oon4i5koXWgjnx9eyrK3m/WRImgrEPR2S7Kxy98pTrsqh2ckwpDQflR/jMdJu1NAgfnFGPW4aDpEAcUf8/SYc2cOlzsKc3ZaOFqxb72hDNsOwKKYi9eKrSzX1yvr/0TW+bZd4PRiv235XbZMJbHI1YqIPpefneeC5FbpZm1RxqUSu+OXjYECwE/ZAIepgEZlrCQAXauKHAD/9nCS5/37AAPHWaV6VR9662QLhAOdUVcfykj8ue6gnUlHwoRtnojZQU4xgk8DGym+cK9ZsfUCrrQ27ivEHWjiMFIQLXmFpwYMHh8gO2yVaWcrImbPGtQa0Jqq/6WBny++2erz8Wqysc/NHoyFqcLBGtdPg1FCNKndA7qYJ7dJBssYvVxsfJxHuAYbqlZGjS2Avwzk3PN6L5Fxv+jYlNjxn2foOW6/2M0+OpO/RkeC8ud4Cg9zxClHYH7Jqctxa9Ov2aR5vp0ioqB/or0PHJ2ryFmgQPDOoikEU5SYdIVqLe3alZQtPEWVMppBA8NuX7vO+0f0+TX8GCbD/4lWbjd2hRriZjc ) => {inserted_id = 63} #Mobile-App: Log-id=15330
12:43:23 gine001 Gilad Nevo INSERTING data into tables `time2vie_cirruscommon`.`support_ticket_answers` fields ( ticket_id, submited_user, answer, category_id, priority, ticket_type, status, hidden ) values ( 2734, gine001, <p>Vi kollar vad det beror på.</p><p>I iPhone fungerar det bra.</p><p>Återkommer.</p>, 9, 2, 1, 3, 0 ) => {inserted_id = 7292}
13:14:41 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = dodo001 AND company_id = 6
13:14:41 dodo001 Admin Cirrus INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( dodo001, 182.64.67.41, okhttp/3.9.1 ) => {inserted_id = 15335}
13:14:41 dodo001 Admin Cirrus DELETE data from tables `temp_session` on conditions username LIKE dodo001
13:14:41 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 13:14:41) on conditions username = dodo001
13:14:41 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 13:14:41) on conditions username = dodo001 AND company_id = 6
13:18:31 dodo001 Gilad Nevo UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (1) on conditions username = dodo001 AND company_id = 6
13:18:36 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( error ) values (0) on conditions username = dodo001 AND company_id = 6
13:18:36 dodo001 Admin Cirrus INSERTING data into tables `log_login` fields ( username, ip, browser ) values ( dodo001, 182.64.67.41, Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 ) => {inserted_id = 15336}
13:18:36 dodo001 Admin Cirrus DELETE data from tables `temp_session` on conditions username LIKE dodo001
13:18:36 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`login` fields ( login, last_time ) values (1, 2020-12-17 13:18:36) on conditions username = dodo001
13:18:36 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`secondary_login` fields ( last_login_time ) values (2020-12-17 13:18:36) on conditions username = dodo001 AND company_id = 6
13:18:37 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`ws_sessions` fields ( user_id ) values (dodo001) on conditions session_id = htsq1no5i5ao0a21li8av70fr0
13:19:53 dodo001 Admin Cirrus UPDATING data to tables `employee` fields ( language ) values (en) on conditions username = dodo001
13:31:00 dodo001 Admin Cirrus UPDATING data to tables `time2vie_cirruscommon`.`ws_sessions` fields ( user_id ) values (dodo001) on conditions session_id = htsq1no5i5ao0a21li8av70fr0
